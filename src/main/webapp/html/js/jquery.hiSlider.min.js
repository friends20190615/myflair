(function() {
    function flexslider(obj, i) {
        this.obj = obj;
        this.init();
    }
    flexslider.prototype = {
        curIndex: 0,
        len: 0,
        items: null,
        obj: null,
        auto: 0,
        time: 3000,
        timer: null,
        canGun: false,
        containerHeight: 501,
        init: function() {
            var me = this;
            this.items = $("#slider .hiSlider > li");
            this.len = this.items.size();
            this.curIndex = 0;
            this._initEvent();
            this._regiZoom();
            if (this.auto) {
                this.timer = setInterval(function() {
                    me.go();
                }, this.time);
            }
            var t = setTimeout(function() {
                $("#mousewheel").fadeIn();
                clearTimeout(t);
            }, 1000);
            var t1 = setTimeout(function() {
                $("#mousewheel").fadeOut();
                clearTimeout(t1);
            }, 1000 * 10);

            $("body").on("mousewheel DOMMouseScroll", function(e) {
                if (me.canGun) {
                    me.canGun = false;
                    var delta = (e.originalEvent.wheelDelta && (e.originalEvent.wheelDelta > 0 ? 1 : -1)) ||
                        (e.originalEvent.detail && (e.originalEvent.detail > 0 ? -1 : 1));
                    var img = $("#zoomDiv .active").find("img");
                    if (delta > 0) {
                        me.imgAdd(img);
                    } else {
                        me.imgSub(img);
                    }
                }
                e.preventDefault();
            });
        },
        _regiZoom: function() {
            var me = this;
            this.items.each(function() {
                var img = $(this).find("img");
                var image1 = new Image();
                image1.src = img.attr("src");
                image1.onload = function() {
                    img.attr("imgW", 812)
                        .attr("imgH", 501)
                        .attr("oldWidth", img.width())
                        .attr("oldHeight", img.height())
                        .attr("canZoomAdd", 1)
                        .attr("canZoomSub", 0)
                        .css({
                            "top": (me.containerHeight - img.height()) / 2,
                            "visibility": "visible"
                        });
                }
            });
            var t = setInterval(function() {
                me.canGun = true;
            }, 200);
        },
        imgAdd: function(obj) {
            var imgW = obj.attr("imgW");
            var imgH = obj.attr("imgH");
            var oldWidth = obj.attr("oldWidth");
            var oldHeight = obj.attr("oldHeight");
            var canZoomAdd = obj.attr("canZoomAdd");
            if (canZoomAdd == "1") {
                obj.attr("canZoomSub", 1);
                if (oldWidth < oldHeight) {
                    cssStyle = {
                        "maxWidth": imgW,
                        'width': imgW,
                        "maxHeight": 2000,
                        "top": 0
                    }
                    obj.parent().css("overflow-x", "hidden");
                    obj.parent().css("overflow-y", "auto");
                } else {
                    cssStyle = {
                        "maxHeight": imgH,
                        'height': imgH,
                        "top": 0
                    }
                    obj.parent().css("overflow-y", "hidden");
                    obj.parent().css("overflow-x", "auto");
                }
                obj.attr("canZoomAdd", 0);
                obj.css(cssStyle);
            }
        },
        imgSub: function(obj) {
            var imgW = obj.attr("imgW");
            var imgH = obj.attr("imgH");
            var oldWidth = obj.attr("oldWidth");
            var oldHeight = obj.attr("oldHeight");
            var canZoomSub = obj.attr("canZoomSub");
            if (canZoomSub == "1") {
                obj.attr("canZoomAdd", 1);
                if (oldWidth < oldHeight) {
                    cssStyle = {
                        "maxWidth": oldWidth,
                        'width': oldWidth,
                        "top": (this.containerHeight - oldHeight) / 2
                    }
                    obj.parent().css("overflow-y", "hidden");
                } else {
                    cssStyle = {
                        "maxHeight": oldHeight,
                        'height': oldHeight,
                        "top": (this.containerHeight - oldHeight) / 2
                    }
                    obj.parent().css("overflow-x", "hidden");
                }
                obj.attr("canZoomSub", 0);
                obj.css(cssStyle);
            }

        },
        go: function() {
            $(this.obj).find(".hiSlider-btn-next").trigger("click");
        },
        _initEvent: function() {
            var me = this;
            $(this.obj).find(".hiSlider-btn-prev").click(function() {
                me.prev();
            });
            $(this.obj).find(".hiSlider-btn-next").click(function() {
                me.next();
            });
        },
        resizeTop: function(obj) {
            var me = this;
            var img = obj.find("img");
            img.css({
                "top": (me.containerHeight - img.height()) / 2,
                "visibility": "visible"
            });
            if (!img.attr("resize")) {
                console.log(img.width());

                img.attr("resize", 1)
                    .attr("oldWidth", img.width())
                    .attr("oldHeight", img.height())

            }
        },
        next: function() {
            if (this.curIndex + 1 < this.len) {
                this.curIndex++;
            } else {
                this.curIndex = 0;
            }
            this.items.fadeOut().eq(this.curIndex).fadeIn();
            this.items.removeClass("active").eq(this.curIndex).addClass("active");
            this.resizeTop(this.items.eq(this.curIndex));
        },
        prev: function() {
            if (this.curIndex > 0) {
                this.curIndex--;
            } else {
                this.curIndex = this.len - 1;
            }
            this.items.fadeOut().eq(this.curIndex).fadeIn();
            this.items.removeClass("active").eq(this.curIndex).addClass("active");
            this.resizeTop(this.items.eq(this.curIndex));
        }
    }
    $.fn.hiSlider = function() {
        return this.each(function(i) {
            new flexslider(this, i);
        });
    }

})();
